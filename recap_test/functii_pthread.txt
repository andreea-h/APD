


int pthread_create(pthread_t *thread, const pthread_attr_t *attr, 
						void *(*start_routine) (void *), void *arg);


void *f(void *arg) {
    [...]
 
    pthread_exit(NULL);
}

int pthread_join(pthread_t thread, void **retval);



///Mutex
pthread_mutex_t mutex;

int pthread_mutex_init(pthread_mutex_t *mutex, 
		const pthread_mutexattr_t *attr);

int pthread_mutex_destroy(pthread_mutex_t *mutex);

int pthread_mutex_lock(pthread_mutex_t *mutex);

int pthread_mutex_unlock(pthread_mutex_t *mutex);

//returneaza 0 la success

///Bariera
pthread_barrier_t barrier;


int pthread_barrier_init(pthread_barrier_t *barrier, 
		const pthread_barrierattr_t *attr, unsigned count);
//count=nr de threaduri care trebuie sa ajunga la bariera pentru ca
aceasta sa se deblocheze

int pthread_barrier_destroy(pthread_barrier_t *barrier);

int pthread_barrier_wait(pthread_barrier_t *barrier);
































